---
apiVersion: v1
data:
  parca.yaml: |-
    "object_storage":
      "bucket":
        "config":
          "directory": "/var/lib/parca"
        "type": "FILESYSTEM"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.18.0
  name: parca
  namespace: parca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.18.0
  name: parca
  namespace: parca
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: observability
      app.kubernetes.io/instance: parca
      app.kubernetes.io/name: parca
  template:
    metadata:
      labels:
        app.kubernetes.io/component: observability
        app.kubernetes.io/instance: parca
        app.kubernetes.io/name: parca
        app.kubernetes.io/version: v0.18.0
    spec:
      containers:
      - args:
        - /parca
        - --http-address=:7070
        - --config-path=/etc/parca/parca.yaml
        - --log-level=info
        - --cors-allowed-origins=*
        - --debuginfod-upstream-servers=https://debuginfod.systemtap.org
        - --debuginfod-http-request-timeout=5m
        image: ghcr.io/parca-dev/parca:v0.18.0
        livenessProbe:
          exec:
            command:
            - /grpc_health_probe
            - -v
            - -addr=:7070
          initialDelaySeconds: 5
        name: parca
        ports:
        - containerPort: 7070
          name: http
        readinessProbe:
          exec:
            command:
            - /grpc_health_probe
            - -v
            - -addr=:7070
          initialDelaySeconds: 10
        resources: {}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/parca
          name: config
        - mountPath: /var/lib/parca
          name: data
      nodeSelector:
        kubernetes.io/os: linux
      securityContext: null
      serviceAccountName: parca
      terminationGracePeriodSeconds: 120
      volumes:
      - configMap:
          name: parca
        name: config
      - emptyDir: {}
        name: data
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
  name: parca
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: parca-serviceaccount
  namespace: parca
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - put
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: parca-secret-writer
  namespace: parca
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: parca-serviceaccount
subjects:
- kind: ServiceAccount
  name: parca
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.18.0
  name: parca
  namespace: parca
spec:
  ports:
  - name: http
    port: 7070
    targetPort: 7070
  selector:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: parca-route
  namespace: parca
spec:
  to:
    kind: Service
    name: parca
  port:
    targetPort: 7070
  wildcardPolicy: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.18.0
  name: parca
  namespace: parca
